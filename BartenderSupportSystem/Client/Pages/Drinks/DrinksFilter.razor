@using BartenderSupportSystem.Shared.Utils.RecommendationSystem.Drinks
@using BartenderSupportSystem.Shared.Models.RecommendationSystem
@using BartenderSupportSystem.Shared.Models.RecommendationSystem.Enums
@using BartenderSupportSystem.Client.Repositories
@using BartenderSupportSystem.Client.Repositories.Interfaces
<h3>DrinksFilter</h3>

@if (_brands != null)
{
    <EditForm Model="DrinkFilterDto" OnSubmit="OnSubmit" class="form-inline">
        <div class="form-group">
            <label for="@DrinkFilterDto.Name">Name</label>
            <div>
                <InputText class="form-control" @bind-Value="@DrinkFilterDto.Name"/>
            </div>
        </div>
        <div class="form-group">
            <label for="@DrinkFilterDto.Type">Type</label>
            <div>
                <InputSelect class="form-control" list="drinks" @bind-Value="@DrinkFilterDto.Type">
                    @foreach (var opt in Enum.GetValues(typeof(AlcoholType)))
                    {
                        <option value="@opt" selected>@opt</option>
                    }
                    <option value="" selected>---Select A Type---</option>
                </InputSelect>
            </div>
        </div>

        <div class="form-group">
            <label for="@DrinkFilterDto.AlcoholPercentageMinValue">Alcohol Percentage Min Value</label>
            <div>
                <InputNumber min="0" max="100" class="form-control" @bind-Value="@DrinkFilterDto.AlcoholPercentageMinValue"/>
            </div>
        </div>
        <div class="form-group">
            <label for="@DrinkFilterDto.AlcoholPercentageMaxValue">Alcohol Percentage Max Value</label>
            <div>
                <InputNumber min="0" max="100" class="form-control" @bind-Value="@DrinkFilterDto.AlcoholPercentageMaxValue"/>
            </div>
        </div>
        

        <div class="form-group">
            <label for="@DrinkFilterDto.Flavor">Flavor (Description)</label>
            <div>
                <InputTextArea class="form-control" @bind-Value="@DrinkFilterDto.Flavor"/>
            </div>
        </div>
        <div class="form-group">
            <label for="@DrinkFilterDto.PricePerMl">Price Per Ml</label>
            <div>
                <InputNumber class="form-control" @bind-Value="@DrinkFilterDto.PricePerMl"/>
            </div>
        </div>
        <div class="form-group">
            <label for="@DrinkFilterDto.BrandId">Brand</label>
            <div>
                <GuidInputSelect class="form-control" @bind-Value="DrinkFilterDto.BrandId">
                    @foreach (var brand in _brands)
                    {
                        <option value="@brand.Id">@brand.Name</option>
                    }
                    <option value="@Guid.Empty" selected>---Select A Brand---</option>
                </GuidInputSelect>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {

    [Parameter]
    public DrinkFilterDto DrinkFilterDto { get; set; }

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [Inject]
    public IBrandRepository BrandRepository { get; set; }

    private string _imageUrl;
    private List<BrandDto> _brands = new List<BrandDto>();

    protected override async Task OnInitializedAsync()
    {
        _brands = await BrandRepository.GetBrands();
        _brands = _brands.OrderBy(el => el.Name).ToList();
    }

}