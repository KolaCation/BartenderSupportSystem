@page "/brands"
@using BartenderSupportSystem.Client.Repositories
@using BartenderSupportSystem.Shared.Models.RecommendationSystem
@using AutoMapper
@using BartenderSupportSystem.Client.Repositories.Interfaces
@using BartenderSupportSystem.Client.ViewModels.RecommendationSystem
@using BartenderSupportSystem.Shared.Utils
@inject NavigationManager NavigationManager

<h3>Brands Index</h3>

<GenericList List="@_brands">
    <WholeListTemplate>
        <table class="table table-striped">
            <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Country Of Origin</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var brand in _brands)
            {
                <tr>
                    <td>@brand.Name</td>
                    <td>@brand.CountryOfOrigin</td>
                    <td><a class="btn btn-success" href="/brands/edit/@brand.Id">Edit</a></td>
                    <td><button class="btn btn-danger" @onclick="@(() => Delete(brand.Id))">Delete</button></td>
                </tr>
            }
            </tbody>
        </table>
    </WholeListTemplate>
</GenericList>
   

@code {
    [Inject] public IBrandRepository BrandRepository { get; set; }
    [Inject] public IMapper Mapper { get; set; }
    private List<BrandViewModel> _brands;

    protected override async Task OnInitializedAsync()
    {
        var brands = await BrandRepository.GetBrands();
        _brands = Mapper.Map<List<BrandDto>, List<BrandViewModel>>(brands);
    }

    private async Task Delete(Guid id)
    {
        await BrandRepository.DeleteBrand(id);
    }
}
