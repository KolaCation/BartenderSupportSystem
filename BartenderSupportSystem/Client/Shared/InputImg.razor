@using System.IO
@using Blazor.FileReader
@inject IFileReaderService FileReaderService
<div>
    <label>
        @Label
    </label>
    <div>
        <input type="file" accept=".jpg,.jpeg,.png" @ref="_inputElement" @onchange="ImageFileSelected"/>
    </div>
</div>
<div>
    @if (_imageBase64 != null)
    {
        <div style="margin: 10px;">
            <img src="data:image/jpeg;base64, @_imageBase64" style="width: 400px;"/>
        </div>
    }
</div>
<div>
    @if (ImageUrl != null)
    {
        <div style="margin: 10px;">
            <img src="@ImageUrl" style="width: 400px;" />
        </div>
    }
</div>

@code {
    [Parameter] public string Label { get; set; }
    [Parameter] public string ImageUrl { get; set; }
    [Parameter] public EventCallback<string> OnSelectedImage { get; set; }
    private string _imageBase64;
    private ElementReference _inputElement;

    private async Task ImageFileSelected()
    {
        foreach (var file in await FileReaderService.CreateReference(_inputElement).EnumerateFilesAsync())
        {
            using (var stream = await file.CreateMemoryStreamAsync(1024 * 8))
            {
                var imageBytes = new byte[stream.Length];
                stream.Read(imageBytes, 0, (int) stream.Length);
                _imageBase64 = Convert.ToBase64String(imageBytes);
                await OnSelectedImage.InvokeAsync(_imageBase64);
                ImageUrl = null;
                StateHasChanged();
            }
        }
    }
}
